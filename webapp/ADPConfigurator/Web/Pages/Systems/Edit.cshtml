@page
@model Web.Pages.Systems.EditModel
@using ADPConfigurator.Web.Services
@inject PullSourceStateProvider PullSourceStateProvider

@{
    ViewData["Title"] = "Edit";
}

<h1>
    <i class="float-right fas fa-cogs"></i>
    Edit System
    @if (PullSourceStateProvider.HasPullSource())
    {
        <a href="@("/Systems/Pull?SystemName=" + Model.System.SystemName)" class="btn btn-primary pull-button">
            <i class="fas fa-code-branch"></i>
            Pull
        </a>
    }
</h1>

<form method="post">
    <div class="row">
        <div class="col-md-4 col-sm-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="System.SystemId" />
            <input type="hidden" asp-for="System.SystemCode" />
            <input type="hidden" asp-for="System.LocalAdminGroup" />
            <input type="hidden" asp-for="System.MemberGroup" />
            <input type="hidden" asp-for="System.SystemId" />
            <input type="hidden" asp-for="System.DeletedIndicator" />
            <input type="hidden" asp-for="System.CreatedBy" />
            <input type="hidden" asp-for="System.DateCreated" />
            <input type="hidden" asp-for="System.ModifiedBy" />
            <input type="hidden" asp-for="System.DateModified" />
            <div class="form-group">
                <label class="control-label">System Code</label>
                <p>@Model.System.SystemCode</p>
            </div>
            <div class="form-group">
                <label asp-for="System.SystemName" class="control-label">System Name (Globally Unique)</label>
                <input asp-for="System.SystemName" class="form-control" />
                <span asp-validation-for="System.SystemName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="System.SystemDescription" class="control-label">System Description</label>
                <input asp-for="System.SystemDescription" class="form-control" />
                <span asp-validation-for="System.SystemDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="System.ReadonlyGroup" class="control-label">Readonly User AAD Group (GUID)</label>
                <input asp-for="System.ReadonlyGroup" class="form-control" />
                <span asp-validation-for="System.ReadonlyGroup" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="System.Enabled" /> @Html.DisplayNameFor(model => model.System.Enabled)
                </label>
            </div>

        </div>

        <div class="col-md-7 offset-md-1 col-sm-12 offset-sm-0">
            <div id="systemDependency">
                <h2>System Dependencies</h2>
                <table class="table table" id="tblSystemDependency">
                    <thead>
                        <tr>
                            <th>
                                System Dependency
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.SystemDependencies.Count; i++)
                        {
                            <tr id="@Model.SystemDependencies[i].SystemDependencyId">
                                @Html.HiddenFor(modelItem => Model.SystemDependencies[i].SystemDependencyId)
                                @Html.HiddenFor(modelItem => Model.SystemDependencies[i].DeletedIndicator)
                                @Html.HiddenFor(modelItem => Model.SystemDependencies[i].SystemId)
                                <td>
                                    <div class="form-group">
                                        <select asp-for="@Model.SystemDependencies[i].DependencyId" class="form-control" asp-items="ViewBag.SystemList"></select>
                                        <span asp-validation-for="@Model.SystemDependencies[i].DependencyId" class="text-danger"></span>
                                    </div>
                                </td>
                                <td>
                                    <button id="btnDelete-@Model.SystemDependencies[i].SystemDependencyId" type="button" class="btn btn-danger">
                                        <i class="fas fa-trash"></i>
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="form-group">
                    <button id="btnAddSystemDependency" type="button" class="btn btn-primary">
                        <i class="fas fa-plus-circle"></i>
                        Add new system dependency
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h2>Properties</h2>
            @for (var i = 0; i < Model.CurrentSystemProperties.Count; i++)
            {
                <div class="form-group">
                    @Html.HiddenFor(modelItem => Model.CurrentSystemProperties[i].SystemPropertyId)
                    @Html.HiddenFor(modelItem => Model.CurrentSystemProperties[i].DeletedIndicator)
                    @Html.HiddenFor(modelItem => Model.CurrentSystemProperties[i].SystemPropertyTypeId)
                    <label>
                        @Html.DisplayFor(modelItem => Model.CurrentSystemProperties[i].SystemPropertyType.SystemPropertyTypeName)
                    </label>
                    @if (Model.CurrentSystemProperties[i].SystemPropertyType.SystemPropertyTypeValidation.SystemPropertyTypeValidationName == "DropDownList")
                    {
                        var itemList = new SelectList(Model.SystemPropertyTypeOptions.Where(t => t.SystemPropertyTypeId == Model.CurrentSystemProperties[i].SystemPropertyType.SystemPropertyTypeId), "SystemPropertyTypeOptionName", "SystemPropertyTypeOptionName");
                        <select asp-for="CurrentSystemProperties[i].SystemPropertyValue" class="form-control" asp-items="itemList"></select>
                        <span asp-validation-for="CurrentSystemProperties[i].SystemPropertyValue" class="text-danger"></span>
                    }
                    else if (Model.CurrentSystemProperties[i].SystemPropertyType.SystemPropertyTypeValidation.SystemPropertyTypeValidationName == "NumberBox")
                    {
                        @Html.TextBoxFor(modelItem => Model.CurrentSystemProperties[i].SystemPropertyValue, new { style = "width:100%", @class = "form-control", @type = "number" })
                    }
                    else if (Model.CurrentSystemProperties[i].SystemPropertyType.SystemPropertyTypeValidation.SystemPropertyTypeValidationName == "MultiLineTextBox")
                    {
                        @Html.TextAreaFor(modelItem => Model.CurrentSystemProperties[i].SystemPropertyValue, new { style = "width:100%", @class = "form-control" })
                    }
                    else // else it is a TextBox
                    {
                        @Html.TextBoxFor(modelItem => Model.CurrentSystemProperties[i].SystemPropertyValue, new { style = "width:100%", @class = "form-control" })
                    }
                    <div class="small text-muted">
                        @Model.CurrentSystemProperties[i].SystemPropertyType.SystemPropertyTypeDescription
                    </div>
                </div>
            }
        </div>
    </div>

    @{await Html.RenderPartialAsync("_FormControls");}
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_SystemDependencyPartial");}
}

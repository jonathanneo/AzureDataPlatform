{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    // Generic params
    "tagObject": {
      "type": "object"
    },
    // Diagnostics params
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the central Log Analytics workspace that stores security event and data used by Azure Security Center"
      }
    },
    "diagnosticsStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the storage account that stores all the security and audit events"
      }
    },
    "diagnosticsRetentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Number of days to retain data in the diagnostics Storage Account"
      }
    },
    // Specific params
    "akvName": {
      "type": "string",
      "metadata": {
        "description": "Name of the vault"
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant ID for the subscription and use assigned access to the vault."
      }
    },
    "deployerObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object ID of the AAD user or service principal that will have deployer access to the vault."
      }
    },
    "vaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": ["Standard", "Premium"],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for ARM template deployment"
      }
    },
    "enableVaultForVolumeEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for volume encryption"
      }
    },
    "additionalAccessPolicies": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Specifies additional access policies for the KeyVault"
      }
    }
  },
  "variables": {
    "azureLocation": "[resourceGroup().location]",
    "defaultAccessPolicies": [
      {
        "tenantId": "[parameters('tenantId')]",
        "objectId": "[parameters('deployerObjectId')]",
        "permissions": {
          "keys": [],
          "secrets": ["Get", "Set", "List"],
          "certificates": ["Get", "Create", "List", "Import"]
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('akvName')]",
      "apiVersion": "2016-10-01",
      "location": "[variables('azureLocation')]",
      "tags": "[parameters('tagObject')]",
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enabledForVolumeEncryption": "[parameters('enableVaultForVolumeEncryption')]",
        "enableSoftDelete": true,
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": "[concat(variables('defaultAccessPolicies'), parameters('additionalAccessPolicies'))]",
        "sku": {
          "name": "[parameters('vaultSku')]",
          "family": "A"
        }
      },
      "resources": [
        {
          "condition": "[not(empty(parameters('logAnalyticsWorkspaceId')))]",
          "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat(parameters('akvName'), '/', 'Microsoft.Insights/', 'diagnostics')]",
          "dependsOn": ["[parameters('akvName')]"],
          "properties": {
            "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
            "storageAccountId": "[parameters('diagnosticsStorageAccountId')]",
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('diagnosticsRetentionInDays')]"
                },
                "timeGrain": null
              }
            ],
            "logs": [
              {
                "category": "AuditEvent",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('diagnosticsRetentionInDays')]"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "outputs": {
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('akvName')]"
    },
    "keyVaultResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('akvName'))]"
    }
  }
}

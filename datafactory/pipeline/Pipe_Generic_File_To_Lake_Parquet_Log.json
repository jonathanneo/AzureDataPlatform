{
  "name": "Pipe_Generic_File_To_Lake_Parquet_Log",
  "properties": {
    "description": "This pipeline is used to copy parquet files from source into the data lake",
    "activities": [
      {
        "name": "IF - Task type is FileSys Parquet File to Lake",
        "type": "IfCondition",
        "dependsOn": [],
        "userProperties": [],
        "typeProperties": {
          "expression": {
            "value": "@and(or(equals(toUpper(pipeline().parameters.TaskType), toUpper('File System File to Lake')),equals(toUpper(pipeline().parameters.TaskType), toUpper('File System File to SQL'))),equals(pipeline().parameters.Log,true))",
            "type": "Expression"
          },
          "ifTrueActivities": [
            {
              "name": "CD - Write the par file to the lake - FileSys to Lake",
              "type": "Copy",
              "dependsOn": [
                {
                  "activity": "FN - Get file system password parquet",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": true
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "ParquetSource",
                  "storeSettings": {
                    "type": "FileServerReadSettings",
                    "recursive": true
                  }
                },
                "sink": {
                  "type": "ParquetSink",
                  "storeSettings": {
                    "type": "AzureBlobFSWriteSettings"
                  },
                  "formatSettings": {
                    "type": "ParquetWriteSettings"
                  }
                },
                "enableStaging": false,
                "translator": {
                  "value": "@pipeline().parameters.SchemaMapping",
                  "type": "Expression"
                }
              },
              "inputs": [
                {
                  "referenceName": "Generic_Local_Parquet",
                  "type": "DatasetReference",
                  "parameters": {
                    "host": {
                      "value": "@pipeline().parameters.Host",
                      "type": "Expression"
                    },
                    "filePath": {
                      "value": "@pipeline().parameters.SourceFilePath",
                      "type": "Expression"
                    },
                    "fileName": {
                      "value": "@pipeline().parameters.SourceFileName",
                      "type": "Expression"
                    },
                    "compressionType": {
                      "value": "@pipeline().parameters.CompressionType",
                      "type": "Expression"
                    },
                    "userid": {
                      "value": "@activity('FN - Get file system username parquet').output.Response",
                      "type": "Expression"
                    },
                    "password": {
                      "value": "@activity('FN - Get file system password parquet').output.Response",
                      "type": "Expression"
                    }
                  }
                }
              ],
              "outputs": [
                {
                  "referenceName": "Generic_DatalakeGen2_Parquet_AzureIR",
                  "type": "DatasetReference",
                  "parameters": {
                    "dataLakeServiceEndPoint": {
                      "value": "@pipeline().parameters.TargetServiceEndPoint",
                      "type": "Expression"
                    },
                    "dataLakeFilePath": {
                      "value": "@pipeline().parameters.TargetFilePath",
                      "type": "Expression"
                    },
                    "dataLakeFileName": {
                      "value": "@pipeline().parameters.TargetFileName",
                      "type": "Expression"
                    }
                  }
                }
              ]
            },
            {
              "name": "SP - Log the error - Write par to lake -FileSys to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the par file to the lake - FileSys to Lake",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the file to the lake - Blob to Lake",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('CD - Write the par file to the lake - FileSys to Lake').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('CD - Write the par file to the lake - FileSys to Lake').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "FN - Get file system password parquet",
              "type": "AzureFunctionActivity",
              "dependsOn": [
                {
                  "activity": "FN - Get file system username parquet",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": true,
                "secureInput": true
              },
              "userProperties": [],
              "typeProperties": {
                "functionName": "GetKeyVaultSecret",
                "method": "POST",
                "body": {
                  "keyvaultName": "@pipeline().parameters.KeyVaultName",
                  "secretName": "onPremisesPassword"
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureFunction",
                "type": "LinkedServiceReference"
              }
            },
            {
              "name": "SP - Log the error - Get file system password parquet",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "FN - Get file system password parquet",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "FN - Get file system password parquet",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@{activity('FN - Get file system password parquet').error.message}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('FN - Get file system password parquet').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "FN - Get file system username parquet",
              "type": "AzureFunctionActivity",
              "dependsOn": [],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": true,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "functionName": "GetKeyVaultSecret",
                "method": "POST",
                "body": {
                  "keyvaultName": "@pipeline().parameters.KeyVaultName",
                  "secretName": "onPremisesUserName"
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureFunction",
                "type": "LinkedServiceReference"
              }
            },
            {
              "name": "SP - Log the error - Get file system username parquet",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "FN - Get file system username parquet",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "FN - Get file system username parquet",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@{activity('FN - Get file system username parquet').error.message}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('FN - Get file system username parquet').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "SP - Log the error - FileLoadLog - Par FileSys to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "SP - Update FileLoadLog - Par FileSys to Lake",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the file to the lake - Lake to Lake",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('SP - Update FileLoadLog - Par FileSys to Lake').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('SP - Update FileLoadLog - Par FileSys to Lake').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "SP - Update FileLoadLog - Par FileSys to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the par file to the lake - FileSys to Lake",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_FileLoadLog_Update]",
                "storedProcedureParameters": {
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "TargetFilePath": {
                    "value": {
                      "value": "@pipeline().parameters.TargetFilePath",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TargetFileName": {
                    "value": {
                      "value": "@pipeline().parameters.TargetFileName",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "SuccessIndicator": {
                    "value": "1",
                    "type": "Int32"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            }
          ]
        }
      },
      {
        "name": "IF - Task type is Blob Parquet File to Lake",
        "type": "IfCondition",
        "dependsOn": [],
        "userProperties": [],
        "typeProperties": {
          "expression": {
            "value": "@and(or(equals(toUpper(pipeline().parameters.TaskType), toUpper('Azure Blob File to Lake')),equals(toUpper(pipeline().parameters.TaskType), toUpper('Azure Blob File to SQL'))),equals(pipeline().parameters.Log,true))",
            "type": "Expression"
          },
          "ifTrueActivities": [
            {
              "name": "CD - Write the par blob to the lake - Blob to Lake",
              "type": "Copy",
              "dependsOn": [],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "ParquetSource",
                  "storeSettings": {
                    "type": "AzureBlobStorageReadSettings",
                    "recursive": true
                  }
                },
                "sink": {
                  "type": "ParquetSink",
                  "storeSettings": {
                    "type": "AzureBlobFSWriteSettings"
                  },
                  "formatSettings": {
                    "type": "ParquetWriteSettings"
                  }
                },
                "enableStaging": false,
                "translator": {
                  "value": "@pipeline().parameters.SchemaMapping",
                  "type": "Expression"
                }
              },
              "inputs": [
                {
                  "referenceName": "Generic_Blob_Parquet_AzureIR",
                  "type": "DatasetReference",
                  "parameters": {
                    "serviceEndPoint": {
                      "value": "@pipeline().parameters.SourceServiceEndPoint",
                      "type": "Expression"
                    },
                    "filePath": {
                      "value": "@pipeline().parameters.SourceFilePath",
                      "type": "Expression"
                    },
                    "fileName": {
                      "value": "@pipeline().parameters.SourceFileName",
                      "type": "Expression"
                    },
                    "compressionType": {
                      "value": "@pipeline().parameters.CompressionType",
                      "type": "Expression"
                    }
                  }
                }
              ],
              "outputs": [
                {
                  "referenceName": "Generic_DatalakeGen2_Parquet_AzureIR",
                  "type": "DatasetReference",
                  "parameters": {
                    "dataLakeServiceEndPoint": {
                      "value": "@pipeline().parameters.TargetServiceEndPoint",
                      "type": "Expression"
                    },
                    "dataLakeFilePath": {
                      "value": "@pipeline().parameters.TargetFilePath",
                      "type": "Expression"
                    },
                    "dataLakeFileName": {
                      "value": "@pipeline().parameters.TargetFileName",
                      "type": "Expression"
                    }
                  }
                }
              ]
            },
            {
              "name": "SP - Log the error - Write par to lake - Blob to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the par blob to the lake - Blob to Lake",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the file to the lake - Blob to Lake",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('CD - Write the par blob to the lake - Blob to Lake').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('CD - Write the par blob to the lake - Blob to Lake').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "SP - Log the error - FileLoadLog - Par Blob to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "SP - Update FileLoadLog - Par Blob to Lake",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the file to the lake - Lake to Lake",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('SP - Update FileLoadLog - Par Blob to Lake').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('SP - Update FileLoadLog - Par Blob to Lake').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "SP - Update FileLoadLog - Par Blob to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the par blob to the lake - Blob to Lake",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_FileLoadLog_Update]",
                "storedProcedureParameters": {
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "TargetFilePath": {
                    "value": {
                      "value": "@pipeline().parameters.TargetFilePath",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TargetFileName": {
                    "value": {
                      "value": "@pipeline().parameters.TargetFileName",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "SuccessIndicator": {
                    "value": "1",
                    "type": "Int32"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            }
          ]
        }
      },
      {
        "name": "IF - Task type is Lake Parquet File to Lake",
        "type": "IfCondition",
        "dependsOn": [],
        "userProperties": [],
        "typeProperties": {
          "expression": {
            "value": "@and(or(equals(toUpper(pipeline().parameters.TaskType), toUpper('Azure Data Lake File to Lake')),equals(toUpper(pipeline().parameters.TaskType), toUpper('Azure Data Lake File to SQL'))),equals(pipeline().parameters.Log,true))",
            "type": "Expression"
          },
          "ifTrueActivities": [
            {
              "name": "CD - Write the par lake to the lake - Lake to Lake",
              "type": "Copy",
              "dependsOn": [],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "ParquetSource",
                  "storeSettings": {
                    "type": "AzureBlobFSReadSettings",
                    "recursive": true
                  }
                },
                "sink": {
                  "type": "ParquetSink",
                  "storeSettings": {
                    "type": "AzureBlobFSWriteSettings"
                  },
                  "formatSettings": {
                    "type": "ParquetWriteSettings"
                  }
                },
                "enableStaging": false,
                "translator": {
                  "value": "@pipeline().parameters.SchemaMapping",
                  "type": "Expression"
                }
              },
              "inputs": [
                {
                  "referenceName": "Generic_DatalakeGen2_Parquet",
                  "type": "DatasetReference",
                  "parameters": {
                    "serviceEndPoint": {
                      "value": "@pipeline().parameters.SourceServiceEndPoint",
                      "type": "Expression"
                    },
                    "filePath": {
                      "value": "@pipeline().parameters.SourceFilePath",
                      "type": "Expression"
                    },
                    "fileName": {
                      "value": "@pipeline().parameters.SourceFileName",
                      "type": "Expression"
                    },
                    "compressionType": {
                      "value": "@pipeline().parameters.CompressionType",
                      "type": "Expression"
                    }
                  }
                }
              ],
              "outputs": [
                {
                  "referenceName": "Generic_DatalakeGen2_Parquet_AzureIR",
                  "type": "DatasetReference",
                  "parameters": {
                    "dataLakeServiceEndPoint": {
                      "value": "@pipeline().parameters.TargetServiceEndPoint",
                      "type": "Expression"
                    },
                    "dataLakeFilePath": {
                      "value": "@pipeline().parameters.TargetFilePath",
                      "type": "Expression"
                    },
                    "dataLakeFileName": {
                      "value": "@pipeline().parameters.TargetFileName",
                      "type": "Expression"
                    }
                  }
                }
              ]
            },
            {
              "name": "SP - Log the error - Write par to lake - Lake to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the par lake to the lake - Lake to Lake",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the file to the lake - Blob to Lake",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('CD - Write the par lake to the lake - Lake to Lake').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('CD - Write the par lake to the lake - Lake to Lake').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "SP - Log the error - FileLoadLog - Par Lake to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "SP - Update FileLoadLog - Par Lake to Lake",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the file to the lake - Lake to Lake",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('SP - Update FileLoadLog - Par Lake to Lake').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('SP - Update FileLoadLog - Par Lake to Lake').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  },
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "SP - Update FileLoadLog - Par Lake to Lake",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the par lake to the lake - Lake to Lake",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_FileLoadLog_Update]",
                "storedProcedureParameters": {
                  "FileLoadLogID": {
                    "value": {
                      "value": "@pipeline().parameters.FileLoadLogID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "TargetFilePath": {
                    "value": {
                      "value": "@pipeline().parameters.TargetFilePath",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TargetFileName": {
                    "value": {
                      "value": "@pipeline().parameters.TargetFileName",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "SuccessIndicator": {
                    "value": "1",
                    "type": "Int32"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            }
          ]
        }
      }
    ],
    "parameters": {
      "TaskType": {
        "type": "string"
      },
      "SourceConnectionSecret": {
        "type": "string"
      },
      "TaskInstanceID": {
        "type": "string"
      },
      "SourceServiceEndPoint": {
        "type": "string"
      },
      "SourceFilePath": {
        "type": "string"
      },
      "SourceFileName": {
        "type": "string"
      },
      "TargetServiceEndPoint": {
        "type": "string"
      },
      "TargetFilePath": {
        "type": "string"
      },
      "TargetFileName": {
        "type": "string"
      },
      "SchemaMapping": {
        "type": "object"
      },
      "CompressionType": {
        "type": "string"
      },
      "ColumnDelimiter": {
        "type": "string"
      },
      "RowDelimiter": {
        "type": "string"
      },
      "EscapeCharacter": {
        "type": "string"
      },
      "QuoteCharacter": {
        "type": "string"
      },
      "FirstRowAsHeader": {
        "type": "bool"
      },
      "NullValue": {
        "type": "string"
      },
      "SkipLineCount": {
        "type": "int"
      },
      "Encoding": {
        "type": "string"
      },
      "Host": {
        "type": "string"
      },
      "SourceFileFormat": {
        "type": "string"
      },
      "KeyVaultName": {
        "type": "string"
      },
      "TaskConfig": {
        "type": "object"
      },
      "CallingPipeline": {
        "type": "string"
      },
      "UseDeltaLakeIndicator": {
        "type": "string"
      },
      "FileLoadLogID": {
        "type": "int"
      },
      "Log": {
        "type": "bool"
      }
    },
    "folder": {
      "name": "ETL/File Load/Generic File to Lake"
    },
    "annotations": []
  },
  "type": "Microsoft.DataFactory/factories/pipelines"
}

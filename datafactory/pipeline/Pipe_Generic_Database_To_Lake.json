{
  "name": "Pipe_Generic_Database_To_Lake",
  "properties": {
    "description": "This pipeline is used to copy On PRem SQL, Azure SQL and Oracle data from source into the data lake",
    "activities": [
      {
        "name": "IF - Check if task type is Azure SQL to SQL",
        "type": "IfCondition",
        "dependsOn": [],
        "userProperties": [],
        "typeProperties": {
          "expression": {
            "value": "@contains(toUpper(pipeline().parameters.TaskType), 'AZURE SQL TO')",
            "type": "Expression"
          },
          "ifTrueActivities": [
            {
              "name": "CD - Write the data to the lake - Azure SQL to SQL-NL",
              "type": "Copy",
              "dependsOn": [
                {
                  "activity": "LKP - Get SQL schema mapping - Azure",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "AzureSqlSource",
                  "sqlReaderQuery": {
                    "value": "@if(greater(pipeline().parameters.SQLCommand,''),\t\t\nconcat(replace(pipeline().parameters.SQLCommand,'*',pipeline().parameters.SelectColumnList)\n\t\t\t,if(\n\t\t\t\tand(\n\t\t\t\t\tand(\n\t\t\t\t\t\tgreater(pipeline().parameters.WhereClause, '')\n\t\t\t\t\t\t,greater(indexof(\n\t\t\t\t\t\t\t\t\t\tpipeline().parameters.SQLCommand\n\t\t\t\t\t\t\t\t\t\t,'FROM'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t, -1\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t,greater(indexof(\n\t\t\t\t\t\t\t\t\tpipeline().parameters.SQLCommand\n\t\t\t\t\t\t\t\t\t,'SELECT'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t, -1\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t,pipeline().parameters.WhereClause\n\t\t\t\t, ''\n\t\t\t\t)\n\t\t\t), \nconcat('SELECT '\n\t\t\t,pipeline().parameters.SelectColumnList\n\t\t\t,' FROM '\n            ,pipeline().parameters.SQLCommand\n            ,pipeline().parameters.WhereClause\n\t\t\t)\n)",
                    "type": "Expression"
                  },
                  "partitionOption": "None"
                },
                "sink": {
                  "type": "ParquetSink",
                  "storeSettings": {
                    "type": "AzureBlobFSWriteSettings"
                  },
                  "formatSettings": {
                    "type": "ParquetWriteSettings"
                  }
                },
                "enableStaging": false,
                "translator": {
                  "value": "@if(equals(activity('LKP - Get SQL schema mapping - Azure').output.firstRow.output, '{\"type\":\"TabularTranslator\"}'), null, json(activity('LKP - Get SQL schema mapping - Azure').output.firstRow.output))",
                  "type": "Expression"
                }
              },
              "inputs": [
                {
                  "referenceName": "Generic_AzureSQL",
                  "type": "DatasetReference",
                  "parameters": {
                    "secretName": {
                      "value": "@pipeline().parameters.SourceConnectionSecret",
                      "type": "Expression"
                    }
                  }
                }
              ],
              "outputs": [
                {
                  "referenceName": "Generic_DatalakeGen2_Parquet_AzureIR",
                  "type": "DatasetReference",
                  "parameters": {
                    "dataLakeServiceEndPoint": {
                      "value": "@pipeline().parameters.DataLakeServiceEndPoint",
                      "type": "Expression"
                    },
                    "dataLakeFilePath": {
                      "value": "@pipeline().parameters.DataLakeFilePath",
                      "type": "Expression"
                    },
                    "dataLakeFileName": {
                      "value": "@pipeline().parameters.DataLakeFileName",
                      "type": "Expression"
                    }
                  }
                }
              ]
            },
            {
              "name": "SP - Log the error - Write to lake -AzureSQL to SQL-NL",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the data to the lake - Azure SQL to SQL-NL",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the data to the lake - Azure SQL to SQL",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('CD - Write the data to the lake - Azure SQL to SQL-NL').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('CD - Write the data to the lake - Azure SQL to SQL-NL').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "LKP - Get SQL schema mapping - Azure",
              "type": "Lookup",
              "dependsOn": [],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "AzureSqlSource",
                  "sqlReaderStoredProcedureName": "[DI].[usp_SchemaMapping_Get]",
                  "storedProcedureParameters": {
                    "TaskID": {
                      "type": "Int32",
                      "value": {
                        "value": "@pipeline().parameters.TaskID",
                        "type": "Expression"
                      }
                    }
                  },
                  "partitionOption": "None"
                },
                "dataset": {
                  "referenceName": "Generic_AzureSQL",
                  "type": "DatasetReference",
                  "parameters": {
                    "secretName": "sqlDatabaseConnectionStringConfig"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "name": "IF - Check if task type is On Prem SQL to SQL",
        "type": "IfCondition",
        "dependsOn": [],
        "userProperties": [],
        "typeProperties": {
          "expression": {
            "value": "@contains(toUpper(pipeline().parameters.TaskType), 'ON PREM SQL TO')",
            "type": "Expression"
          },
          "ifTrueActivities": [
            {
              "name": "CD - Write the data to the lake - On Prem SQL to SQL-NL",
              "type": "Copy",
              "dependsOn": [
                {
                  "activity": "LKP - Get SQL schema mapping - OnPrem",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "SqlServerSource",
                  "sqlReaderQuery": {
                    "value": "@if(greater(pipeline().parameters.SQLCommand,''),\t\t\nconcat(replace(pipeline().parameters.SQLCommand,'*',pipeline().parameters.SelectColumnList)\n\t\t\t,if(\n\t\t\t\tand(\n\t\t\t\t\tand(\n\t\t\t\t\t\tgreater(pipeline().parameters.WhereClause, '')\n\t\t\t\t\t\t,greater(indexof(\n\t\t\t\t\t\t\t\t\t\tpipeline().parameters.SQLCommand\n\t\t\t\t\t\t\t\t\t\t,'FROM'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t, -1\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t,greater(indexof(\n\t\t\t\t\t\t\t\t\tpipeline().parameters.SQLCommand\n\t\t\t\t\t\t\t\t\t,'SELECT'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t, -1\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t,pipeline().parameters.WhereClause\n\t\t\t\t, ''\n\t\t\t\t)\n\t\t\t), \nconcat('SELECT '\n\t\t\t,pipeline().parameters.SelectColumnList\n\t\t\t,' FROM '\n            ,pipeline().parameters.SQLCommand\n            ,pipeline().parameters.WhereClause\n\t\t\t)\n)",
                    "type": "Expression"
                  },
                  "partitionOption": "None"
                },
                "sink": {
                  "type": "ParquetSink",
                  "storeSettings": {
                    "type": "AzureBlobFSWriteSettings"
                  },
                  "formatSettings": {
                    "type": "ParquetWriteSettings"
                  }
                },
                "enableStaging": false,
                "translator": {
                  "value": "@if(equals(activity('LKP - Get SQL schema mapping - OnPrem').output.firstRow.output, '{\"type\":\"TabularTranslator\"}'), null, json(activity('LKP - Get SQL schema mapping - OnPrem').output.firstRow.output))",
                  "type": "Expression"
                }
              },
              "inputs": [
                {
                  "referenceName": "Generic_SQLServer",
                  "type": "DatasetReference",
                  "parameters": {
                    "secretName": {
                      "value": "@pipeline().parameters.SourceConnectionSecret",
                      "type": "Expression"
                    }
                  }
                }
              ],
              "outputs": [
                {
                  "referenceName": "Generic_DatalakeGen2_Parquet_AzureIR",
                  "type": "DatasetReference",
                  "parameters": {
                    "dataLakeServiceEndPoint": {
                      "value": "@pipeline().parameters.DataLakeServiceEndPoint",
                      "type": "Expression"
                    },
                    "dataLakeFilePath": {
                      "value": "@pipeline().parameters.DataLakeFilePath",
                      "type": "Expression"
                    },
                    "dataLakeFileName": {
                      "value": "@pipeline().parameters.DataLakeFileName",
                      "type": "Expression"
                    }
                  }
                }
              ]
            },
            {
              "name": "SP - Log the error - Write to lake -OnPremSQL to SQL-NL",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the data to the lake - On Prem SQL to SQL-NL",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the data to the lake - On Prem SQL to SQL",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('CD - Write the data to the lake - On Prem SQL to SQL-NL').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('CD - Write the data to the lake - On Prem SQL to SQL-NL').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "LKP - Get SQL schema mapping - OnPrem",
              "type": "Lookup",
              "dependsOn": [],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "AzureSqlSource",
                  "sqlReaderStoredProcedureName": "[DI].[usp_SchemaMapping_Get]",
                  "storedProcedureParameters": {
                    "TaskID": {
                      "type": "Int32",
                      "value": {
                        "value": "@pipeline().parameters.TaskID",
                        "type": "Expression"
                      }
                    }
                  },
                  "partitionOption": "None"
                },
                "dataset": {
                  "referenceName": "Generic_AzureSQL",
                  "type": "DatasetReference",
                  "parameters": {
                    "secretName": "sqlDatabaseConnectionStringConfig"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "name": "IF - Check if task type is Oracle to SQL",
        "type": "IfCondition",
        "dependsOn": [],
        "userProperties": [],
        "typeProperties": {
          "expression": {
            "value": "@contains(toUpper(pipeline().parameters.TaskType), 'ORACLE TO')",
            "type": "Expression"
          },
          "ifTrueActivities": [
            {
              "name": "CD - Write the data to the lake - Oracle to SQL-NL",
              "type": "Copy",
              "dependsOn": [
                {
                  "activity": "LKP - Get SQL schema mapping - Oracle",
                  "dependencyConditions": ["Succeeded"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "OracleSource",
                  "oracleReaderQuery": {
                    "value": "@if(greater(pipeline().parameters.SQLCommand,''),\t\t\nconcat(replace(pipeline().parameters.SQLCommand,'*',pipeline().parameters.SelectColumnList)\n\t\t\t,if(\n\t\t\t\tand(\n\t\t\t\t\tand(\n\t\t\t\t\t\tgreater(pipeline().parameters.WhereClause, '')\n\t\t\t\t\t\t,greater(indexof(\n\t\t\t\t\t\t\t\t\t\tpipeline().parameters.SQLCommand\n\t\t\t\t\t\t\t\t\t\t,'FROM'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t, -1\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t,greater(indexof(\n\t\t\t\t\t\t\t\t\tpipeline().parameters.SQLCommand\n\t\t\t\t\t\t\t\t\t,'SELECT'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t, -1\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t,pipeline().parameters.WhereClause\n\t\t\t\t, ''\n\t\t\t\t)\n\t\t\t), \nconcat('SELECT '\n\t\t\t,pipeline().parameters.SelectColumnList\n\t\t\t,' FROM '\n            ,pipeline().parameters.SQLCommand\n            ,pipeline().parameters.WhereClause\n\t\t\t)\n)",
                    "type": "Expression"
                  },
                  "partitionOption": "None"
                },
                "sink": {
                  "type": "ParquetSink",
                  "storeSettings": {
                    "type": "AzureBlobFSWriteSettings"
                  },
                  "formatSettings": {
                    "type": "ParquetWriteSettings"
                  }
                },
                "enableStaging": false,
                "translator": {
                  "value": "@if(equals(activity('LKP - Get SQL schema mapping - Oracle').output.firstRow.output, '{\"type\":\"TabularTranslator\"}'), null, json(activity('LKP - Get SQL schema mapping - Oracle').output.firstRow.output))",
                  "type": "Expression"
                }
              },
              "inputs": [
                {
                  "referenceName": "Generic_Oracle",
                  "type": "DatasetReference",
                  "parameters": {
                    "secretName": {
                      "value": "@pipeline().parameters.SourceConnectionSecret",
                      "type": "Expression"
                    }
                  }
                }
              ],
              "outputs": [
                {
                  "referenceName": "Generic_DatalakeGen2_Parquet_AzureIR",
                  "type": "DatasetReference",
                  "parameters": {
                    "dataLakeServiceEndPoint": {
                      "value": "@pipeline().parameters.DataLakeServiceEndPoint",
                      "type": "Expression"
                    },
                    "dataLakeFilePath": {
                      "value": "@pipeline().parameters.DataLakeFilePath",
                      "type": "Expression"
                    },
                    "dataLakeFileName": {
                      "value": "@pipeline().parameters.DataLakeFileName",
                      "type": "Expression"
                    }
                  }
                }
              ]
            },
            {
              "name": "SP - Log the error - Write to lake - Oracle to SQL-NL",
              "type": "SqlServerStoredProcedure",
              "dependsOn": [
                {
                  "activity": "CD - Write the data to the lake - Oracle to SQL-NL",
                  "dependencyConditions": ["Failed"]
                }
              ],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "storedProcedureName": "[DI].[usp_DataFactoryLog_Insert]",
                "storedProcedureParameters": {
                  "ActivityName": {
                    "value": "CD - Write the data to the lake - Oracle to SQL",
                    "type": "String"
                  },
                  "DataFactoryName": {
                    "value": {
                      "value": "@{pipeline().DataFactory}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "ErrorMessage": {
                    "value": {
                      "value": "@activity('CD - Write the data to the lake - Oracle to SQL-NL').Error.message",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "OutputMessage": {
                    "value": {
                      "value": "@{activity('CD - Write the data to the lake - Oracle to SQL-NL').output}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineName": {
                    "value": {
                      "value": "@{pipeline().Pipeline}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineRunID": {
                    "value": {
                      "value": "@{pipeline().RunId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerID": {
                    "value": {
                      "value": "@{pipeline().TriggerId}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerName": {
                    "value": {
                      "value": "@{pipeline().TriggerName}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerTime": {
                    "value": {
                      "value": "@{pipeline().TriggerTime}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "PipelineTriggerType": {
                    "value": {
                      "value": "@{pipeline().TriggerType}",
                      "type": "Expression"
                    },
                    "type": "String"
                  },
                  "TaskInstanceID": {
                    "value": {
                      "value": "@pipeline().parameters.TaskInstanceID",
                      "type": "Expression"
                    },
                    "type": "Int64"
                  },
                  "LogType": {
                    "value": "Error",
                    "type": "String"
                  }
                }
              },
              "linkedServiceName": {
                "referenceName": "AzureSQL",
                "type": "LinkedServiceReference",
                "parameters": {
                  "secretName": "sqlDatabaseConnectionStringConfig"
                }
              }
            },
            {
              "name": "LKP - Get SQL schema mapping - Oracle",
              "type": "Lookup",
              "dependsOn": [],
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "userProperties": [],
              "typeProperties": {
                "source": {
                  "type": "AzureSqlSource",
                  "sqlReaderStoredProcedureName": "[DI].[usp_SchemaMapping_Get]",
                  "storedProcedureParameters": {
                    "TaskID": {
                      "type": "Int32",
                      "value": {
                        "value": "@pipeline().parameters.TaskID",
                        "type": "Expression"
                      }
                    }
                  },
                  "partitionOption": "None"
                },
                "dataset": {
                  "referenceName": "Generic_AzureSQL",
                  "type": "DatasetReference",
                  "parameters": {
                    "secretName": "sqlDatabaseConnectionStringConfig"
                  }
                }
              }
            }
          ]
        }
      }
    ],
    "parameters": {
      "TaskType": {
        "type": "string"
      },
      "SourceConnectionSecret": {
        "type": "string"
      },
      "SQLCommand": {
        "type": "string"
      },
      "SelectColumnList": {
        "type": "string"
      },
      "WhereClause": {
        "type": "string"
      },
      "TaskInstanceID": {
        "type": "string"
      },
      "DataLakeServiceEndPoint": {
        "type": "string"
      },
      "DataLakeFilePath": {
        "type": "string"
      },
      "DataLakeFileName": {
        "type": "string"
      },
      "CallingPipeline": {
        "type": "string"
      },
      "TaskConfig": {
        "type": "object"
      },
      "TaskID": {
        "type": "string"
      }
    },
    "folder": {
      "name": "ETL/Database Load/Generic Database to Lake"
    },
    "annotations": []
  },
  "type": "Microsoft.DataFactory/factories/pipelines"
}

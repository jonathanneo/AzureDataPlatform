{
	"name": "Pipe_Generic_Database_To_Lake_Batch",
	"properties": {
		"description": "This pipeline calls the respective source to lake batch pipeline based on the type of source",
		"activities": [
			{
				"name": "IF - Check if task type is Azure SQL to SQL",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(toUpper(pipeline().parameters.TaskType), 'AZURE SQL TO')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "EP - Azure SQL to Lake Batch",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Pipe_Azure_SQL_To_Lake_Batch",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"SourceTableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"BatchColumnName": {
										"value": "@pipeline().parameters.BatchColumnName",
										"type": "Expression"
									},
									"TaskType": {
										"value": "@pipeline().parameters.TaskType",
										"type": "Expression"
									},
									"SQLCommand": {
										"value": "@pipeline().parameters.SQLCommand",
										"type": "Expression"
									},
									"SelectColumnList": {
										"value": "@pipeline().parameters.SelectColumnList",
										"type": "Expression"
									},
									"PartitionCount": {
										"value": "@pipeline().parameters.PartitionCount",
										"type": "Expression"
									},
									"SourceConnectionSecret": {
										"value": "@pipeline().parameters.SourceConnectionSecret",
										"type": "Expression"
									},
									"TaskInstanceID": {
										"value": "@pipeline().parameters.TaskInstanceID",
										"type": "Expression"
									},
									"WhereClause": {
										"value": "@pipeline().parameters.WhereClause",
										"type": "Expression"
									},
									"DataLakeServiceEndPoint": {
										"value": "@pipeline().parameters.DataLakeServiceEndPoint",
										"type": "Expression"
									},
									"DataLakeFilePath": {
										"value": "@pipeline().parameters.DataLakeFilePath",
										"type": "Expression"
									},
									"DataLakeFileName": {
										"value": "@pipeline().parameters.DataLakeFileName",
										"type": "Expression"
									},
									"PreviousDataLakeFilePath": {
										"value": "@pipeline().parameters.PreviousDataLakeFilePath",
										"type": "Expression"
									},
									"TargetTempTable": {
										"value": "@pipeline().parameters.TargetTempTable",
										"type": "Expression"
									},
									"UniqueConstraintIndicator": {
										"value": "@pipeline().parameters.UniqueConstraintIndicator",
										"type": "Expression"
									},
									"TargetTable": {
										"value": "@pipeline().parameters.TargetTable",
										"type": "Expression"
									},
									"TargetDeltaFilePath": {
										"value": "@pipeline().parameters.TargetDeltaFilePath",
										"type": "Expression"
									},
									"UniqueConstraintColumns": {
										"value": "@pipeline().parameters.UniqueConstraintColumns",
										"type": "Expression"
									},
									"UseDeltaLakeIndicator": {
										"value": "@pipeline().parameters.UseDeltaLakeIndicator",
										"type": "Expression"
									},
									"DeltaLakeRetentionDays": {
										"value": "@pipeline().parameters.DeltaLakeRetentionDays",
										"type": "Expression"
									},
									"LoadType": {
										"value": "@pipeline().parameters.LoadType",
										"type": "Expression"
									},
									"TargetDatabase": {
										"value": "@pipeline().parameters.TargetDatabase",
										"type": "Expression"
									},
									"AllowSchemaDrift": {
										"value": "@pipeline().parameters.AllowSchemaDrift",
										"type": "Expression"
									},
									"SourceConfig": {
										"value": "@pipeline().parameters.SourceConfig",
										"type": "Expression"
									},
									"CallingPipeline": {
										"value": "@pipeline().parameters.CallingPipeline",
										"type": "Expression"
									},
									"DatabricksURL": {
										"value": "@pipeline().parameters.DatabricksURL",
										"type": "Expression"
									},
									"DatabricksClusterID": {
										"value": "@pipeline().parameters.DatabricksClusterID",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "IF - Check if task type is On Prem SQL to SQL",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(toUpper(pipeline().parameters.TaskType), 'ON PREM SQL TO')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "EP - On Prem SQL to Lake Batch",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Pipe_OnPrem_SQL_To_Lake_Batch",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"SourceTableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"BatchColumnName": {
										"value": "@pipeline().parameters.BatchColumnName",
										"type": "Expression"
									},
									"TaskType": {
										"value": "@pipeline().parameters.TaskType",
										"type": "Expression"
									},
									"SQLCommand": {
										"value": "@pipeline().parameters.SQLCommand",
										"type": "Expression"
									},
									"SelectColumnList": {
										"value": "@pipeline().parameters.SelectColumnList",
										"type": "Expression"
									},
									"PartitionCount": {
										"value": "@pipeline().parameters.PartitionCount",
										"type": "Expression"
									},
									"SourceConnectionSecret": {
										"value": "@pipeline().parameters.SourceConnectionSecret",
										"type": "Expression"
									},
									"TaskInstanceID": {
										"value": "@pipeline().parameters.TaskInstanceID",
										"type": "Expression"
									},
									"WhereClause": {
										"value": "@pipeline().parameters.WhereClause",
										"type": "Expression"
									},
									"DataLakeServiceEndPoint": {
										"value": "@pipeline().parameters.DataLakeServiceEndPoint",
										"type": "Expression"
									},
									"DataLakeFilePath": {
										"value": "@pipeline().parameters.DataLakeFilePath",
										"type": "Expression"
									},
									"DataLakeFileName": {
										"value": "@pipeline().parameters.DataLakeFileName",
										"type": "Expression"
									},
									"PreviousDataLakeFilePath": {
										"value": "@pipeline().parameters.PreviousDataLakeFilePath",
										"type": "Expression"
									},
									"TargetTempTable": {
										"value": "@pipeline().parameters.TargetTempTable",
										"type": "Expression"
									},
									"UniqueConstraintIndicator": {
										"value": "@pipeline().parameters.UniqueConstraintIndicator",
										"type": "Expression"
									},
									"TargetTable": {
										"value": "@pipeline().parameters.TargetTable",
										"type": "Expression"
									},
									"TargetDeltaFilePath": {
										"value": "@pipeline().parameters.TargetDeltaFilePath",
										"type": "Expression"
									},
									"UniqueConstraintColumns": {
										"value": "@pipeline().parameters.UniqueConstraintColumns",
										"type": "Expression"
									},
									"UseDeltaLakeIndicator": {
										"value": "@pipeline().parameters.UseDeltaLakeIndicator",
										"type": "Expression"
									},
									"DeltaLakeRetentionDays": {
										"value": "@pipeline().parameters.DeltaLakeRetentionDays",
										"type": "Expression"
									},
									"LoadType": {
										"value": "@pipeline().parameters.LoadType",
										"type": "Expression"
									},
									"TargetDatabase": {
										"value": "@pipeline().parameters.TargetDatabase",
										"type": "Expression"
									},
									"AllowSchemaDrift": {
										"value": "@pipeline().parameters.AllowSchemaDrift",
										"type": "Expression"
									},
									"SourceConfig": {
										"value": "@pipeline().parameters.SourceConfig",
										"type": "Expression"
									},
									"CallingPipeline": {
										"value": "@pipeline().parameters.CallingPipeline",
										"type": "Expression"
									},
									"DatabricksURL": {
										"value": "@pipeline().parameters.DatabricksURL",
										"type": "Expression"
									},
									"DatabricksClusterID": {
										"value": "@pipeline().parameters.DatabricksClusterID",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "IF - Check if task type is Oracle to SQL",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(toUpper(pipeline().parameters.TaskType), 'ORACLE TO')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "EP - Oracle to Lake Batch",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Pipe_Oracle_To_Lake_Batch",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"SourceTableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"BatchColumnName": {
										"value": "@pipeline().parameters.BatchColumnName",
										"type": "Expression"
									},
									"TaskType": {
										"value": "@pipeline().parameters.TaskType",
										"type": "Expression"
									},
									"SQLCommand": {
										"value": "@pipeline().parameters.SQLCommand",
										"type": "Expression"
									},
									"SelectColumnList": {
										"value": "@pipeline().parameters.SelectColumnList",
										"type": "Expression"
									},
									"PartitionCount": {
										"value": "@pipeline().parameters.PartitionCount",
										"type": "Expression"
									},
									"SourceConnectionSecret": {
										"value": "@pipeline().parameters.SourceConnectionSecret",
										"type": "Expression"
									},
									"TaskInstanceID": {
										"value": "@pipeline().parameters.TaskInstanceID",
										"type": "Expression"
									},
									"WhereClause": {
										"value": "@pipeline().parameters.WhereClause",
										"type": "Expression"
									},
									"DataLakeServiceEndPoint": {
										"value": "@pipeline().parameters.DataLakeServiceEndPoint",
										"type": "Expression"
									},
									"DataLakeFilePath": {
										"value": "@pipeline().parameters.DataLakeFilePath",
										"type": "Expression"
									},
									"DataLakeFileName": {
										"value": "@pipeline().parameters.DataLakeFileName",
										"type": "Expression"
									},
									"PreviousDataLakeFilePath": {
										"value": "@pipeline().parameters.PreviousDataLakeFilePath",
										"type": "Expression"
									},
									"TargetTempTable": {
										"value": "@pipeline().parameters.TargetTempTable",
										"type": "Expression"
									},
									"UniqueConstraintIndicator": {
										"value": "@pipeline().parameters.UniqueConstraintIndicator",
										"type": "Expression"
									},
									"TargetTable": {
										"value": "@pipeline().parameters.TargetTable",
										"type": "Expression"
									},
									"TargetDeltaFilePath": {
										"value": "@pipeline().parameters.TargetDeltaFilePath",
										"type": "Expression"
									},
									"UniqueConstraintColumns": {
										"value": "@pipeline().parameters.UniqueConstraintColumns",
										"type": "Expression"
									},
									"UseDeltaLakeIndicator": {
										"value": "@pipeline().parameters.UseDeltaLakeIndicator",
										"type": "Expression"
									},
									"DeltaLakeRetentionDays": {
										"value": "@pipeline().parameters.DeltaLakeRetentionDays",
										"type": "Expression"
									},
									"LoadType": {
										"value": "@pipeline().parameters.LoadType",
										"type": "Expression"
									},
									"TargetDatabase": {
										"value": "@pipeline().parameters.TargetDatabase",
										"type": "Expression"
									},
									"AllowSchemaDrift": {
										"value": "@pipeline().parameters.AllowSchemaDrift",
										"type": "Expression"
									},
									"SourceConfig": {
										"value": "@pipeline().parameters.SourceConfig",
										"type": "Expression"
									},
									"CallingPipeline": {
										"value": "@pipeline().parameters.CallingPipeline",
										"type": "Expression"
									},
									"DatabricksURL": {
										"value": "@pipeline().parameters.DatabricksURL",
										"type": "Expression"
									},
									"DatabricksClusterID": {
										"value": "@pipeline().parameters.DatabricksClusterID",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SourceTableName": {
				"type": "string"
			},
			"BatchColumnName": {
				"type": "string"
			},
			"TaskType": {
				"type": "string"
			},
			"SQLCommand": {
				"type": "string"
			},
			"SelectColumnList": {
				"type": "string"
			},
			"PartitionCount": {
				"type": "string"
			},
			"SourceConnectionSecret": {
				"type": "string"
			},
			"TaskInstanceID": {
				"type": "string"
			},
			"WhereClause": {
				"type": "string"
			},
			"DataLakeServiceEndPoint": {
				"type": "string"
			},
			"DataLakeFilePath": {
				"type": "string"
			},
			"DataLakeFileName": {
				"type": "string"
			},
			"PreviousDataLakeFilePath": {
				"type": "string"
			},
			"TargetTempTable": {
				"type": "string"
			},
			"UniqueConstraintIndicator": {
				"type": "string"
			},
			"TargetTable": {
				"type": "string"
			},
			"TargetDeltaFilePath": {
				"type": "string"
			},
			"UniqueConstraintColumns": {
				"type": "string"
			},
			"UseDeltaLakeIndicator": {
				"type": "string"
			},
			"DeltaLakeRetentionDays": {
				"type": "string"
			},
			"LoadType": {
				"type": "string"
			},
			"DatabricksURL": {
				"type": "string"
			},
			"DatabricksClusterID": {
				"type": "string"
			},
			"TargetDatabase": {
				"type": "string"
			},
			"AllowSchemaDrift": {
				"type": "string"
			},
			"SourceConfig": {
				"type": "object"
			},
			"CallingPipeline": {
				"type": "string"
			}
		},
		"folder": {
			"name": "ETL/Database Load/Batch Loads"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}